---
alwaysApply: true
---

# Conventions

When developing plugins for Orca Note, please adhere to the following conventions to ensure compatibility and maintainability:

1. **Avoid Reserved Names**: Any name starting with an underscore (`_`) is reserved for system use. Plugin developers should not use such names for commands, renderers, settings, or any other identifiers.

2. **Use Unique Prefixes**: To avoid conflicts with other plugins, always include a unique prefix related to your plugin in the names of commands, renderers, and other identifiers. For example, if your plugin is named `myplugin`, use a prefix like `myplugin.` for all identifiers (e.g., `myplugin.commandName`, `myplugin.rendererName`).

3. **Follow Naming Standards**: Use descriptive and consistent naming conventions for all identifiers. This improves readability and helps other developers understand your code.

4. **Respect System Behavior**: Do not override or interfere with system-level commands, renderers, or UI elements unless explicitly allowed by the API.

By following these conventions, you can ensure that your plugin integrates seamlessly with Orca Note and coexists harmoniously with other plugins.# Conventions

When developing plugins for Orca Note, please adhere to the following conventions to ensure compatibility and maintainability:

1. **Avoid Reserved Names**: Any name starting with an underscore (`_`) is reserved for system use. Plugin developers should not use such names for commands, renderers, settings, or any other identifiers.

2. **Use Unique Prefixes**: To avoid conflicts with other plugins, always include a unique prefix related to your plugin in the names of commands, renderers, and other identifiers. For example, if your plugin is named `myplugin`, use a prefix like `myplugin.` for all identifiers (e.g., `myplugin.commandName`, `myplugin.rendererName`).

3. **Follow Naming Standards**: Use descriptive and consistent naming conventions for all identifiers. This improves readability and helps other developers understand your code.

4. **Respect System Behavior**: Do not override or interfere with system-level commands, renderers, or UI elements unless explicitly allowed by the API.

By following these conventions, you can ensure that your plugin integrates seamlessly with Orca Note and coexists harmoniously with other plugins.